{"version":3,"sources":["containers/data.js","utils/capitalizeText.jsx","components/DailyWeatherBlock/OverallInfo.jsx","utils/createImageUrl.jsx","components/DailyWeatherBlock/DetailedInfo.jsx","components/DailyWeatherBlock/DailyChart.jsx","components/DailyWeatherBlock/index.jsx","components/WeeklyWeatherList/SingleDayBlock.jsx","components/WeeklyWeatherList/index.jsx","components/WeatherBlock.jsx","components/Header.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["jsonData","data","city","current_day","city_info","name","country","weather","current_temperature","precipitation","humidity","wind","weekly_forecast","friday","description","temperature","hourly","conditions","saturday","sunday","monday","tuesday","wednesday","thursday","friday_next","capitalizeText","string","charAt","toUpperCase","slice","OverallInfo","_ref","cityInfo","currentDay","currentDayWeather","cityName","react_default","a","createElement","reactstrap_es","className","defaultProps","createImageUrl","size","imageUrl","type","split","map","word","toLowerCase","join","createType","replace","DetailedInfo","dayDescription","currentTemperature","xs","src","alt","DailyChart","chartObjects","temps","forEach","key","index","push","hour","temp_val","AreaChart","height","margin","top","width","XAxis","axisLine","dataKey","interval","padding","left","right","minTickGap","tickLine","tick","stroke","fontSize","Area","animationDuration","animationEasing","fill","label","position","strokeWidth","weatherData","this","props","DailyWeatherBlock_OverallInfo","DailyWeatherBlock_DetailedInfo","DailyWeatherBlock_DailyChart","Component","SingleDayBlock","dayName","onSelect","blockIndex","isActive","weatherDescription","dayilyWeatherInfo","temperatures","blockClass","onClick","handleOnClick","bind","substr","Math","max","apply","Object","toConsumableArray","min","state","activeId","selectedDay","setState","setCurrentDay","weeklyForecast","onDaySelect","SingleDaysBlock","keys","SingleDayBlock_SingleDayBlock","WeatherBlock","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","components_DailyWeatherBlock_default","WeeklyWeatherList_default","Header","App","Header_Header","WeatherBlock_WeatherBlock","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.029db98d.chunk.js","sourcesContent":["const jsonData = {\n  \"data\": {\n    \"city\": {\n      \"current_day\": \"friday\",\n      \"city_info\": {\n        \"name\": \"Barcelona\",\n        \"country\": \"Spain\"\n      },\n      \"weather\": {\n        \"current_temperature\": \"13\",\n        \"precipitation\": \"10%\",\n        \"humidity\": \"78%\",\n        \"wind\": \"11km/h\"\n      },\n      \"weekly_forecast\": {\n        \"friday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"hourly\": [\n              \"11\",\"13\",\"13\",\"12\",\"9\",\"8\",\"7\",\"7\",\"7\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"74%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"saturday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"hourly\": [\n              \"8\",\"7\",\"7\",\"7\",\"11\",\"13\",\"12\",\"10\",\"10\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"73%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"sunday\": {\n          \"description\": \"Scattered Showers\",\n          \"temperature\": {\n            \"hourly\": [\n              \"10\",\"10\",\"9\",\"10\",\"13\",\"14\",\"13\",\"12\",\"11\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"50%\",\n            \"humidity\": \"77%\",\n            \"wind\": \"18km/h\"\n          }\n        },\n        \"monday\": {\n          \"description\": \"Mostly Sunny\",          \n          \"temperature\": {\n            \"hourly\": [\n              \"11\",\"9\",\"8\",\"8\",\"12\",\"14\",\"11\",\"8\",\"7\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"10%\",\n            \"humidity\": \"69%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"tuesday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"hourly\": [\n              \"7\",\"6\",\"6\",\"6\",\"12\",\"14\",\"12\",\"12\",\"12\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"73%\",\n            \"wind\": \"14km/h\"\n          }\n        },\n        \"wednesday\": {\n          \"description\": \"Cloudy\",\n          \"temperature\": {\n            \"hourly\": [\n              \"12\",\"11\",\"10\",\"10\",\"13\",\"13\",\"12\",\"11\",\"9\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"20%\",\n            \"humidity\": \"83%\",\n            \"wind\": \"14km/h\"\n          }\n        },\n        \"thursday\": {\n          \"description\": \"Scattered Showers\",\n          \"temperature\": {\n            \"hourly\": [\n              \"9\",\"8\",\"8\",\"8\",\"11\",\"12\",\"11\",\"9\",\"8\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"40%\",\n            \"humidity\": \"75%\",\n            \"wind\": \"13km/h\"\n          }\n        },\n        \"friday_next\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"hourly\": [\n              \"8\",\"7\",\"7\",\"8\",\"11\",\"13\",\"11\",\"9\",\"8\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"74%\",\n            \"wind\": \"16km/h\"\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default jsonData;","export const capitalizeText = function(string) \n{\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Col, Row } from 'reactstrap';\n\nimport { capitalizeText } from '../../utils/capitalizeText';\nimport './OverallInfo.css';\n\nOverallInfo.defaultProps = {\n  cityInfo: {},\n  currentDay: '',\n  currentDayWeather: {},\n}\n\nfunction OverallInfo({ cityInfo, currentDay, currentDayWeather }) {\n  OverallInfo.propTypes = {\n    cityInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.string.isRequired,\n    currentDayWeather: PropTypes.object.isRequired,\n  }\n\n  const description = currentDayWeather['description'];\n  const cityName = cityInfo['name'];\n  const country = cityInfo['country'];\n  return (\n    <Row>\n      <Col>\n        <h2 className=\"city-info\">{cityName}, {country}</h2>\n        <p>{capitalizeText(currentDay)}</p>\n        <p>{description}</p>\n      </Col>\n    </Row>\n  )\n}\n\n\n\nexport default OverallInfo\n\n","export const createImageUrl = function(size, description)\n{ \n  let imageUrl = \"https://ssl.gstatic.com/onebox/weather/_size_/_type_.png\"\n  let type = createType(description);\n\n  switch(type) {\n    case 'scattered_showers':\n      return imageUrl.replace('_size_', size).replace('_type_', 'rain_light')\n    case 'mostly_sunny':\n      return imageUrl.replace('_size_', size).replace('_type_', 'sunny')\n    default:\n     return imageUrl.replace('_size_', size).replace('_type_', type)\n  }\n}\n\nfunction createType(description) {\n  let splittedDescription = description.split(\" \");\n  let newSplittedDescription = splittedDescription.map(word => {\n    return word.toLowerCase();\n  });\n\n  return newSplittedDescription.join(\"_\")\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, Col, Row } from 'reactstrap';\n\nimport { createImageUrl } from '../../utils/createImageUrl';\nimport './DetailedInfo.css';\n\nfunction DetailedInfo({ currentDayWeather }) {\n  const dayDescription = currentDayWeather['description']\n  const currentTemperature = currentDayWeather['temperature']['hourly'][0]\n  const conditions = currentDayWeather['conditions'] \n  return (\n    <Row className=\"detailedInfo\">\n      <Col xs=\"6\">\n        <img className=\"detailedInfo__image\" \n             src={createImageUrl('64', dayDescription)}\n             alt=\"weather-thumbnail\"\n        >\n        </img>\n        <div className=\"detailedInfo__temperatureBlock\">\n          <span className=\"detailedInfo__currentTemperature\">{currentTemperature}</span>\n          <span className=\"detailedInfo__units\">&deg;C | &deg;F</span>\n        </div>\n      </Col>\n      <Col xs=\"6\">\n        <div className=\"detailedInfo__details\">    \n          <p>Precipitation: {conditions.precipitation} </p>\n          <p>Humidity: {conditions.humidity}</p>\n          <p>Wind: {conditions.wind}</p>\n          <ButtonGroup>\n            <Button size=\"sm\">Temperature</Button>\n            <Button size=\"sm\">Precipitation</Button>\n            <Button size=\"sm\">Wind</Button>\n          </ButtonGroup>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nDetailedInfo.propTypes = {\n\n}\n\nexport default DetailedInfo\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { AreaChart, Area, XAxis, Tooltip } from 'recharts';\n\nconst data = [\n      {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n      {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n      {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n      {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n      {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n      {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n      {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\n\nDailyChart.propTypes = {\n  currentDayWeather: PropTypes.object.isRequired\n}\n\nfunction DailyChart({ currentDayWeather }) {\n  const hours = {\n    \"12AM\": '',\n    \"3AM\": '',\n    \"6AM\": '',\n    \"9AM\": '',\n    \"12PM\": '',\n    \"3PM\": '',\n    \"6PM\": '',\n    \"9PM\": ''\n  }\n  let chartObjects = []\n  const hours2 = [\"12AM\", \"3AM\", \"6AM\", \"9AM\", \"12PM\", \"3PM\", \"6PM\", \"9PM\"]\n  const temps = currentDayWeather['temperature']['hourly']\n  \n  hours2.forEach(function(key, index) {\n    chartObjects.push({\n      'hour': key,\n      'temp_val': temps[index]\n    })\n  })\n\n  return (\n    <div>\n      <AreaChart \n        data={chartObjects}\n        height={120} \n        margin={{ top: 15 }}\n        width={600} \n      >\n        <XAxis\n          axisLine={false}\n          dataKey=\"hour\"\n          interval=\"preserveStartEnd\"\n          padding={{ left: 10, right: 10 }}\n          minTickGap={0}\n          tickLine={false}\n          tick={{\n            stroke: '#bababa',\n            fontSize: 10,\n          }}\n        />\n        <Area\n          animationDuration={500}\n          animationEasing='ease-in'\n          dataKey='temp_val' \n          fill='rgba(255, 204, 0, 0.2)'\n          label={{ \n            fill: '#bababa',\n            fontSize: '12',\n            position: 'top'\n          }}\n          stroke='#ffcc00' \n          strokeWidth='2' \n          type='monotone' \n        />\n      </AreaChart>\n    </div>\n  )\n}\n\nexport default DailyChart\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './index.css';\nimport OverallInfo from './OverallInfo';\nimport DetailedInfo from './DetailedInfo';\nimport DailyChart from './DailyChart';\nexport default class extends Component {\n  static propTypes = {\n    weatherData: PropTypes.object.isRequired,\n    currentDay: PropTypes.string.isRequired\n  }\n\n  static defaultProps = {\n    weatherData: {},\n    currentDay: ''\n  }\n\n  render() {\n    let weatherData = this.props.weatherData\n    const cityInfo = weatherData['city']['city_info']\n    \n    let currentDay = this.props.currentDay\n    \n    let currentDayWeather = weatherData['city']['weekly_forecast'][currentDay]\n    return(\n      <div>\n        <OverallInfo \n          cityInfo={cityInfo}\n          currentDay={currentDay}\n          currentDayWeather={currentDayWeather}\n        />\n        <DetailedInfo currentDayWeather={currentDayWeather} />\n        <DailyChart currentDayWeather={currentDayWeather} />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SingleDayBlock.css';\nimport { capitalizeText } from '../../utils/capitalizeText';\nimport { createImageUrl } from '../../utils/createImageUrl';\n\nexport default class SingleDayBlock extends Component {\n  // Declare propTypes as static properties as early as possible\n  static propTypes = {\n    dayilyWeatherInfo: PropTypes.object.isRequired,\n    dayName: PropTypes.string.isRequired\n  }\n\n  // Default props below propTypes\n  static defaultProps = {\n    dayilyWeatherInfo: {},\n    dayName: ''\n  }\n\n  handleOnClick(dayName) {\n    const onSelect = this.props.onSelect\n    const index = this.props.blockIndex\n    onSelect(index, dayName)\n  }\n\n  render() {\n    const blockClass = 'singleDayBlock'\n    const dayName = this.props.dayName\n    const isActive = this.props.isActive\n    const weatherDescription = this.props.dayilyWeatherInfo['description']\n    const temperatures = this.props.dayilyWeatherInfo['temperature']['hourly']\n    return (\n      <div className={isActive ? blockClass + ' active' : blockClass}\n            onClick={this.handleOnClick.bind(this, dayName)}>\n        <div className=\"singleDayBlock__dayName\">\n          <span className=\"\">\n            {capitalizeText(dayName.substr(0, 3))}\n          </span>\n        </div>\n        <img src={createImageUrl(48, weatherDescription)} \n            className=\"singleDayBlock__image\"/>\n        <span className=\"singleDayBlock__temp singleDayBlock--dayTemp\">\n          {Math.max(...temperatures)}&deg;\n        </span>\n        <span className=\"singleDayBlock__temp singleDayBlock--nightTemp\">\n          {Math.min(...temperatures)}&deg;\n        </span>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Col, Row } from 'reactstrap';\nimport SingleDayBlock from './SingleDayBlock';\n\nexport default class extends Component {\n  state = {\n    activeId: 0\n  }\n  \n  static propTypes = {\n    weeklyForecast: PropTypes.object.isRequired,\n  }\n\n  onDaySelect(index, selectedDay) {\n    this.setState({\n      activeId: index\n    });\n\n    this.props.setCurrentDay(selectedDay);\n  }\n\n  render() {\n    const activeId = this.state.activeId;\n    const weeklyForecast =  this.props.weeklyForecast\n    const onDaySelect = this.onDaySelect.bind(this)\n    const SingleDaysBlock = Object.keys(weeklyForecast).map(function(key, index) {\n      return <SingleDayBlock \n                key={index}\n                blockIndex={index}\n                dayName={key}\n                dayilyWeatherInfo={weeklyForecast[key]}\n                isActive={index === activeId}\n                onSelect={onDaySelect}\n                />\n    })\n    return (\n      <Row>\n        <Col>\n          {SingleDaysBlock}\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './WeatherBlock.css';\nimport jsonData from '../containers/data.js';\nimport DailyWeatherBlock from './DailyWeatherBlock';\nimport WeeklyWeatherList from './WeeklyWeatherList';\n\nexport default class WeatherBlock extends Component {\n  state = { \n    weatherData: jsonData,\n    currentDay: jsonData['data']['city']['current_day']\n  }\n\n  static propTypes = {}\n  static defaultProps = {}\n\n  setCurrentDay = (selectedDay) => {\n    this.setState({\n      currentDay: selectedDay\n    })\n  }\n\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    const weatherData = this.state.weatherData['data']\n    const weeklyForecast = this.state.weatherData['data']['city']['weekly_forecast']\n    let currentDay = this.state.currentDay\n\n    return(\n      <div className=\"weather-block\">\n        <DailyWeatherBlock \n          weatherData={weatherData}\n          currentDay={currentDay}\n        />\n        <WeeklyWeatherList \n          weeklyForecast={weeklyForecast}\n          currentDay={currentDay}\n          setCurrentDay={this.setCurrentDay}\n        />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nimport './Header.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1>Weather app</h1>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport WeatherBlock from '../components/WeatherBlock';\nimport Header from '../components/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container>\n          <WeatherBlock />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["containers/data.js","utils/capitalizeText.jsx","components/DailyWeatherBlock/OverallInfo.jsx","components/DailyWeatherBlock/DetailedInfo.jsx","components/DailyWeatherBlock/DailyChart.jsx","components/DailyWeatherBlock/index.jsx","components/WeeklyWeatherList/index.jsx","components/WeatherBlock.jsx","components/Header.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["jsonData","data","city","current_day","city_info","name","country","weather","current_temperature","precipitation","humidity","wind","weekly_forecast","friday","description","temperature","max","min","hourly","conditions","saturday","sunday","monday","tuesday","wednesday","thursday","friday_next","capitalizeText","string","charAt","toUpperCase","slice","OverallInfo","_ref","cityInfo","currentDay","currentDayWeather","cityName","react_default","a","createElement","reactstrap_es","defaultProps","DetailedInfo","props","xs","style","float","size","DailyChart","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","json_data","DailyWeatherBlock_OverallInfo","DailyWeatherBlock_DetailedInfo","DailyWeatherBlock_DailyChart","Component","WeatherBlock","weather_data","className","components_DailyWeatherBlock_default","WeeklyWeatherList_default","Header","App","Header_Header","WeatherBlock_WeatherBlock","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3757023e.chunk.js","sourcesContent":["const jsonData = {\n  \"data\": {\n    \"city\": {\n      \"current_day\": \"friday\",\n      \"city_info\": {\n        \"name\": \"Barcelona\",\n        \"country\": \"Spain\"\n      },\n      \"weather\": {\n        \"current_temperature\": \"13\",\n        \"precipitation\": \"10%\",\n        \"humidity\": \"78%\",\n        \"wind\": \"11km/h\"\n      },\n      \"weekly_forecast\": {\n        \"friday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"11\",\"13\",\"13\",\"12\",\"9\",\"8\",\"7\",\"7\",\"7\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"74%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"saturday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"8\",\"7\",\"7\",\"7\",\"11\",\"13\",\"12\",\"10\",\"10\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"73%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"sunday\": {\n          \"description\": \"Scattered Showers\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"10\",\"10\",\"9\",\"10\",\"13\",\"14\",\"13\",\"12\",\"11\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"50%\",\n            \"humidity\": \"77%\",\n            \"wind\": \"18km/h\"\n          }\n        },\n        \"monday\": {\n          \"description\": \"Mostly Sunny\",          \n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"11\",\"9\",\"8\",\"8\",\"12\",\"14\",\"11\",\"8\",\"7\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"10%\",\n            \"humidity\": \"69%\",\n            \"wind\": \"16km/h\"\n          }\n        },\n        \"tuesday\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"7\",\"6\",\"6\",\"6\",\"12\",\"14\",\"12\",\"12\",\"12\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"73%\",\n            \"wind\": \"14km/h\"\n          }\n        },\n        \"wednesday\": {\n          \"description\": \"Cloudy\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"12\",\"11\",\"10\",\"10\",\"13\",\"13\",\"12\",\"11\",\"9\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"20%\",\n            \"humidity\": \"83%\",\n            \"wind\": \"14km/h\"\n          }\n        },\n        \"thursday\": {\n          \"description\": \"Scattered Showers\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"9\",\"8\",\"8\",\"8\",\"11\",\"12\",\"11\",\"9\",\"8\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"40%\",\n            \"humidity\": \"75%\",\n            \"wind\": \"13km/h\"\n          }\n        },\n        \"friday_next\": {\n          \"description\": \"Partly Cloudy\",\n          \"temperature\": {\n            \"max\": \"13\",\n            \"min\": \"6\",\n            \"hourly\": [\n              \"8\",\"7\",\"7\",\"8\",\"11\",\"13\",\"11\",\"9\",\"8\"\n            ]\n          },\n          \"conditions\": {\n            \"precipitation\": \"0%\",\n            \"humidity\": \"74%\",\n            \"wind\": \"16km/h\"\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default jsonData;","export const capitalizeText = function(string) \n{\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Col, Row } from 'reactstrap';\n\nimport { capitalizeText } from '../../utils/capitalizeText';\n\nOverallInfo.defaultProps = {\n  cityInfo: {},\n  currentDay: '',\n  currentDayWeather: {},\n}\n\nfunction OverallInfo({ cityInfo, currentDay, currentDayWeather }) {\n  OverallInfo.propTypes = {\n    cityInfo: PropTypes.object.isRequired,\n    currentDay: PropTypes.string.isRequired,\n    currentDayWeather: PropTypes.object.isRequired,\n  }\n\n  const description = currentDayWeather['description'];\n  const cityName = cityInfo['name'];\n  const country = cityInfo['country'];\n  return (\n    <Row>\n      <Col>\n        <h2>{cityName}, {country}</h2>\n        <p>{capitalizeText(currentDay)}</p>\n        <p>{description}</p>\n      </Col>\n    </Row>\n  )\n}\n\n\n\nexport default OverallInfo\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, ButtonGroup, Col, Row } from 'reactstrap';\n\nfunction DetailedInfo(props) {\n  return (\n    <Row>\n      <Col xs=\"6\">\n        <div style={{float: 'left'}}>Image</div>\n        <div style={{float: 'right'}}>Temperature</div>\n      </Col>\n      <Col xs=\"6\">\n        <p>Precipitation</p>\n        <p>Humidity</p>\n        <p>Wind</p>\n        <ButtonGroup>\n          <Button size=\"sm\">Temperature</Button>\n          <Button size=\"sm\">Precipitation</Button>\n          <Button size=\"sm\">Wind</Button>\n        </ButtonGroup>\n      </Col>\n    </Row>\n  )\n}\n\nDetailedInfo.propTypes = {\n\n}\n\nexport default DetailedInfo\n\n","import React from 'react'\n\nfunction DailyChart() {\n  return (\n    <div>\n      <h2>Daily chart will be here soon</h2>\n    </div>\n  )\n}\n\nexport default DailyChart\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './index.css';\nimport OverallInfo from './OverallInfo';\nimport DetailedInfo from './DetailedInfo';\nimport DailyChart from './DailyChart';\nimport json_data from '../../containers/data.js';\nexport default class extends Component {\n  state = {}\n\n  static propTypes = { }\n\n  static defaultProps = { }\n\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    const cityInfo = json_data['data']['city']['city_info']\n    // will be dynamic\n    const currentDay = json_data['data']['city']['current_day']\n    // will be dynamic when additional data about wind and humidity will be provided\n    const currentWeather = json_data['data']['city']['weather']\n    // will be dynamic\n    const currentDayWeather = json_data['data']['city']['weekly_forecast'][currentDay]\n\n    return(\n      <div>\n        <OverallInfo \n          cityInfo={cityInfo}\n          currentDay={currentDay}\n          currentDayWeather={currentDayWeather}\n        />\n        <DetailedInfo />\n        <DailyChart />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Col, Row } from 'reactstrap';\n\nexport default class extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <h4>Weekly list</h4>\n        </Col>\n      </Row>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './WeatherBlock.css';\nimport json_data from '../containers/data.js';\nimport DailyWeatherBlock from './DailyWeatherBlock';\nimport WeeklyWeatherList from './WeeklyWeatherList';\n\nexport default class WeatherBlock extends Component {\n  state = { weather_data: json_data }\n\n  static propTypes = {}\n  static defaultProps = {}\n\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return(\n      <div className=\"weather-block\">\n        <DailyWeatherBlock />\n        <WeeklyWeatherList />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\n\nimport './Header.css';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1>Weather app</h1>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport WeatherBlock from '../components/WeatherBlock';\nimport Header from '../components/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container>\n          <WeatherBlock />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}